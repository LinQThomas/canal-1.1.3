#################################################
## mysql serverId , v1.0.26+ will autoGen
#mysql集群配置中的serverId概念，需要保证和当前mysql集群中id唯一
canal.instance.mysql.slaveId=1234

# enable gtid use true/false
canal.instance.gtidon=false

# position info
#mysql主库链接地址
canal.instance.master.address=127.0.0.1:3306
#mysql主库链接时起始的binlog文件，canal.instance.master.journal.name + canal.instance.master.position : 精确指定一个binlog位点，进行启动
canal.instance.master.journal.name=
#mysql主库链接时起始的binlog偏移量
canal.instance.master.position=
#mysql主库链接时起始的binlog的时间戳，canal.instance.master.timestamp : 指定一个时间戳，canal会自动遍历mysql binlog，找到对应时间戳的binlog位点后，进行启动，不指定任何信息：默认从当前数据库的位点，进行启动。(show master status)
canal.instance.master.timestamp=
canal.instance.master.gtid=

# rds oss binlog
#canal.instance.rds.accesskey=
#canal.instance.rds.secretkey=
canal.instance.rds.instanceId=

# table meta tsdb info
#v1.0.25版本新增,是否开启table meta的时间序列版本记录功能
canal.instance.tsdb.enable=true
#v1.0.25版本新增,table meta的时间序列版本存储的数据库链接串，比如例子为本地嵌入式数据库
#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb
#v1.0.25版本新增,table meta的时间序列版本存储的数据库链接账号
#canal.instance.tsdb.dbUsername=canal
#v1.0.25版本新增,table meta的时间序列版本存储的数据库链接密码
#canal.instance.tsdb.dbPassword=canal

#canal.instance.standby.address =
#canal.instance.standby.journal.name =
#canal.instance.standby.position =
#canal.instance.standby.timestamp =
#canal.instance.standby.gtid=

# username/password
canal.instance.dbUsername=canal
canal.instance.dbPassword=canal
canal.instance.connectionCharset = UTF-8
# enable druid Decrypt database password
canal.instance.enableDruid=false
#canal.instance.pwdPublicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALK4BUxdDltRRE5/zXpVEVPUgunvscYFtEip3pmLlhrWpacX7y7GCMo2/JM6LeHmiiNdH1FWgGCpUfircSwlWKUCAwEAAQ==

# table regex
#mysql 数据解析关注的表，Perl正则表达式.
#多个正则之间以逗号(,)分隔，转义符需要双斜杠(\\)
#常见例子：
#1.  所有表：.*   or  .*\\..*
#2.  canal schema下所有表： canal\\..*
#3.  canal下的以canal打头的表：canal\\.canal.*
#4.  canal schema下的一张表：canal.test1
#5.  多个规则组合使用：canal\\..*,mysql.test1,mysql.test2 (逗号分隔)
#注意：此过滤条件只针对row模式的数据有效(ps. mixed/statement因为不解析sql，所以无法准确提取tableName进行过滤)
#标准的Perl正则，注意转义时需要双斜杠：\\
canal.instance.filter.regex=.*\\..*
# table black regex
canal.instance.filter.black.regex=

#开启binlog并行解析模式
#canal.instance.parser.parallel


# mq config
#canal.mq.topic=example
# dynamic topic route by schema or table regex
#canal.mq.dynamicTopic=mytest1.user,mytest2\\..*,.*\\..*
canal.mq.partition=0
# hash partition config
#canal.mq.partitionsNum=3
#canal.mq.partitionHash=test.table:id^name,.*\\..*
#################################################
